(function(t){function e(e){for(var s,n,i=e[0],l=e[1],u=e[2],h=0,d=[];h<i.length;h++)n=i[h],Object.prototype.hasOwnProperty.call(r,n)&&r[n]&&d.push(r[n][0]),r[n]=0;for(s in l)Object.prototype.hasOwnProperty.call(l,s)&&(t[s]=l[s]);c&&c(e);while(d.length)d.shift()();return a.push.apply(a,u||[]),o()}function o(){for(var t,e=0;e<a.length;e++){for(var o=a[e],s=!0,i=1;i<o.length;i++){var l=o[i];0!==r[l]&&(s=!1)}s&&(a.splice(e--,1),t=n(n.s=o[0]))}return t}var s={},r={app:0},a=[];function n(e){if(s[e])return s[e].exports;var o=s[e]={i:e,l:!1,exports:{}};return t[e].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=s,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(o,s,function(e){return t[e]}.bind(null,s));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/";var i=window["webpackJsonp"]=window["webpackJsonp"]||[],l=i.push.bind(i);i.push=e,i=i.slice();for(var u=0;u<i.length;u++)e(i[u]);var c=l;a.push(["56d7","chunk-vendors"]),o()})({"034f":function(t,e,o){"use strict";var s=o("85ec"),r=o.n(s);r.a},"56d7":function(t,e,o){"use strict";o.r(e);var s=o("2b0e"),r=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"app",attrs:{id:"app"}},[o("div",{staticClass:"map"},[o("l-map",{staticStyle:{height:"100%",width:"100%"},attrs:{zoom:t.zoom,bounds:t.bounds,maxBounds:t.bounds,minZoom:11,maxZoom:18},on:{contextmenu:function(e){return t.rightClick(e)}}},[o("l-tile-layer",{attrs:{url:t.url,attribution:t.attribution}}),o("l-geo-json",{attrs:{"v-if":null!==t.avoidPolygons,geojson:t.avoidPolygons,options:t.onEachFeatureFunction(),"options-style":t.styleFunction("avoid")}}),t.stuttgart.show?o("l-geo-json",{attrs:{geojson:t.stuttgart.value,options:t.onEachFeatureFunction(),"options-style":t.styleFunction("stuttgart")}}):t._e(),t.districts.show?o("l-geo-json",{attrs:{geojson:t.districts_geojson,options:t.onEachFeatureFunction(),"options-style":t.styleFunction}}):t._e(),null!==t.route?o("l-geo-json",{attrs:{geojson:t.routeLine,options:t.onEachFeatureFunction(),"options-style":t.styleFunction("line")}}):t._e(),t._l(t.markersList,(function(e,s){return o("l-marker",{key:"marker-"+s,attrs:{draggable:!0,"lat-lng":e.position},on:{"update:latLng":function(o){return t.$set(e,"position",o)},"update:lat-lng":function(o){return t.$set(e,"position",o)},dragend:function(e){return t.dragEnd()}}})})),o("l-geo-json",{attrs:{geojson:t.stations.value,"options-style":t.styleFunction}})],2)],1),o("div",{staticClass:"sidebar",attrs:{id:"sidebar"}},[o("h3",[t._v("Healthy routing in Stuttgart city")]),t._m(0),t._m(1),o("p",[t._v("The category areas were generated by interpolating over the aggregated average PM 2.5 values of multiple months (early 2020) for every hour of the day")]),o("h4",{staticClass:"settings"},[t._v("Settings")]),o("div",{staticClass:"label"},[t._v(" Lowest Air Quality Index level to avoid:")]),o("v-slider",{staticClass:"slider",attrs:{id:"pm-slider",data:t.categories,ticks:"always",tooltip:"none",duration:.3,marks:!0,adsorb:!0,"tick-size":2,width:"80%",height:"5px",useKeyboard:!0},on:{change:t.changeCategory},model:{value:t.eaqi,callback:function(e){t.eaqi=e},expression:"eaqi"}}),o("div",{staticClass:"label"},[t._v(" Time of the day: ")]),o("v-slider",{staticClass:"slider",attrs:{data:Array.from({length:24},(function(t,e){return e})),ticks:"always",tooltip:"focus",duration:.3,marks:t.hourSliderLabel(),adsorb:!0,"tick-size":2,width:"80%",height:"5px",useKeyboard:!0},on:{change:t.changeHour},model:{value:t.hour,callback:function(e){t.hour=e},expression:"hour"}}),o("label",[t._v(" Show stations "),o("input",{directives:[{name:"model",rawName:"v-model",value:t.stations.show,expression:"stations.show"}],attrs:{type:"checkbox"},domProps:{checked:Array.isArray(t.stations.show)?t._i(t.stations.show,null)>-1:t.stations.show},on:{change:[function(e){var o=t.stations.show,s=e.target,r=!!s.checked;if(Array.isArray(o)){var a=null,n=t._i(o,a);s.checked?n<0&&t.$set(t.stations,"show",o.concat([a])):n>-1&&t.$set(t.stations,"show",o.slice(0,n).concat(o.slice(n+1)))}else t.$set(t.stations,"show",r)},t.fetchStations]}})]),o("label",[t._v(" Highlight stuttgart administrative area "),o("input",{directives:[{name:"model",rawName:"v-model",value:t.stuttgart.show,expression:"stuttgart.show"}],attrs:{type:"checkbox"},domProps:{checked:Array.isArray(t.stuttgart.show)?t._i(t.stuttgart.show,null)>-1:t.stuttgart.show},on:{change:function(e){var o=t.stuttgart.show,s=e.target,r=!!s.checked;if(Array.isArray(o)){var a=null,n=t._i(o,a);s.checked?n<0&&t.$set(t.stuttgart,"show",o.concat([a])):n>-1&&t.$set(t.stuttgart,"show",o.slice(0,n).concat(o.slice(n+1)))}else t.$set(t.stuttgart,"show",r)}}})]),o("div",{staticClass:"routeOutlet",style:{color:t.requestStats.dist?"green":"red"}},[t._v(" Route request information "),t.requestStats.msg?o("div",[t._v(t._s(t.requestStats.msg))]):t._e(),t.requestStats.dist?o("div",[t._v("Route distance (m): "+t._s(t.requestStats.dist))]):t._e(),t.requestStats.dur?o("div",[t._v("Route duration (sec): "+t._s(t.requestStats.dur))]):t._e()])],1)])},a=[function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("p",[t._v("Find a healthy "),o("b",[t._v("bicycle")]),t._v("-route through Stuttgart city using openrouteservice by avoiding areas above a specific value of the "),o("a",{attrs:{target:"_blank",href:"https://airindex.eea.europa.eu/#"}},[t._v("EAQI")]),t._v(". ")])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("p",[t._v("Start and end points can be placed by "),o("b",[t._v("right-clicking")]),t._v(" on the map")])}],n=o("e11e"),i=o.n(n),l=o("2699"),u=o("a40a"),c=o("044a"),h=o("f60f"),d=o("4e2b"),g=o("ea97"),p=o("4971"),v=o.n(p),f=o("bc3a"),m=o.n(f);let y=o("5904");var _={components:{"l-map":l["a"],"l-tile-layer":u["a"],"l-geo-json":c["a"],"l-popup":h["a"],"l-marker":d["a"],"v-slider":v.a,"l-circle-marker":g["a"]},data(){return{dataUrl:"https://raw.githubusercontent.com/jdk24/fossgis_project/master/project/data/",routeInstance:null,url:"http://{s}.tile.osm.org/{z}/{x}/{y}.png",zoom:13,bounds:n["latLngBounds"](n["latLng"](48.602794,8.882591),n["latLng"](48.945522,9.539593)),attribution:'&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors',style:{weight:2,color:"#ECEFF1",opacity:1,fillOpacity:1},enableTooltip:!1,categories:["Fair","Moderate","Poor","Very poor","Extremely poor"],color:"#5175ff",fillColor:"#5175ff",districts:{show:!1,path:"http://localhost:8080/geoserver/project/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=project%3Astuttgart_districts&maxFeatures=50&outputFormat=application%2Fjson",value:null},stuttgart:{show:!1,path:"http://localhost:8080/geoserver/project/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=project%3Astuttgart&maxFeatures=50&outputFormat=application%2Fjson",value:null},stations:{show:!1,path:"",value:null},pm_10:{show:!1,path:"http://localhost:8080/geoserver/project/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=project%3Apm10_view&outputFormat=application%2Fjson",value:null},pm_25:{show:!1,path:"l",value:null},route:null,api_key:"5b3ce3597851110001cf62483a54ed1a0e2342048e6c89f8c2f42286",markers:[],contextMenu:!1,start:!1,avoid_category:2,eaqi:"Moderate",hour:9,requestStats:{}}},created(){},methods:{changeHour(){m.a.get(this.dataUrl+"avg_"+this.hourString+"_hrs_pm25_rst.geojson").then(t=>{this.pm_25.value=t.data}).catch(t=>{console.log("Pollution polygons could not be loaded.",t.message,". Check if geoserver is running.")}),this.computeRoute(),this.fetchStations()},changeCategory(){this.computeRoute()},fetchStations(){this.stations.show?m.a.get(this.dataUrl+"pm25/avg_"+this.hourString+"_hrs.geojson").then(t=>{this.stations.value=t.data}).catch(t=>{console.log("Stations could not be loaded.",t.message,". Check if geoserver is running."),this.stations.value=null}):this.stations.value=null},fetchAssets(t){m.a.get("this.baseUrl + name").then(t=>{console.log(t)})},hourSliderLabel(){return t=>{return[0,6,12,18,23].includes(t)}},dragEnd(){this.computeRoute()},rightClick(t){this.eventPosition=t.latlng,this.start=!this.start,2===this.markers.length?(this.markers[this.start?0:1]={position:t.latlng},this.computeRoute()):(this.markers.push({position:t.latlng}),2===this.markers.length&&this.computeRoute())},computeRoute(){let t=this;setTimeout(()=>{let e=this.markers[0],o=this.markers[1],s={coordinates:[[e.position.lng,e.position.lat],[o.position.lng,o.position.lat]],profile:"cycling-regular",format:"geojson",instructions:!1};null!==this.avoidPolygons&&(s.avoid_polygons=this.avoidPolygons),this.routeInstance.calculate(s).then((function(e){t.route=e.features[0].geometry,t.requestStats={msg:e.message,dist:Math.floor(e.features[0].properties.summary.distance),dur:Math.floor(e.features[0].properties.summary.duration)}})).catch((function(e){let o="An error occured: "+e.message;t.requestStats={msg:o}}))},300)}},computed:{avoidPolygons(){let t=[];if(this.pm_25.value){for(let e of this.pm_25.value.features)Math.floor(e.properties.value)>=this.indexCategory&&t.push(e.geometry.coordinates);if(0!==t.length)return{type:"MultiPolygon",coordinates:t}}return{type:"Polygon",coordinates:[[[0,0],[0,1e-7],[1e-8,0],[0,0]]]}},hourString(){let t=this.hour.toString();return this.hour<10&&(t="0"+t),t},indexCategory(){let t=this.eaqi.substr(0,3);return this.categories.findIndex(e=>e.startsWith(t))+2},markersList(){return this.markers},routeLine(){return this.route},styleFunction(){const t=this.fillColor;return e=>{return"line"===e?{weight:4,color:"#10b617",opacity:.8}:"avoid"===e?{weight:2,color:"#f14159",opacity:.7,fillColor:"#f14159",fillOpacity:.2}:"stuttgart"===e?{weight:3,color:"#468df1",opacity:.4,fillColor:"#fff",fillOpacity:0}:{weight:2,color:"#ECEFF1",opacity:.7,fillColor:t,fillOpacity:.2}}},onEachFeatureFunction(){return this.enableTooltip?(t,e)=>{e.bindTooltip("<div>code:"+t+"</div>",{permanent:!1,sticky:!0})}:()=>{}},districts_geojson(){return this.districts.value}},mounted(){let t=this;this.routeInstance=new y.Directions({api_key:this.api_key}),m.a.get(this.dataUrl+"stuttgart.geojson").then(e=>{t.stuttgart.value=e.data}).catch(t=>{console.log("Stuttgart districts could not be loaded.",t.message,". Check if geoserver is running.")}),m.a.get(this.dataUrl+"stuttgart_districts_old_backup.geojson").then(e=>{t.districts.value=e.data}).catch(t=>{console.log("Stuttgart boundary could not be loaded.",t.message,". Check if geoserver is running.")}),m.a.get(this.dataUrl+"avg_09_hrs_pm25_rst.geojson").then(e=>{t.pm_25.value=e.data}).catch(t=>{console.log("Stuttgart boundary could not be loaded.",t.message,". Check if geoserver is running.")})}},b=_,w=(o("034f"),o("2877")),k=Object(w["a"])(b,r,a,!1,null,null,null),j=k.exports;o("6cc5");s["default"].config.productionTip=!1,delete i.a.Icon.Default.prototype._getIconUrl,i.a.Icon.Default.mergeOptions({iconRetinaUrl:o("584d"),iconUrl:o("6397"),shadowUrl:o("e2b9")}),new s["default"]({render:t=>t(j)}).$mount("#app")},"85ec":function(t,e,o){}});
//# sourceMappingURL=app.655e415a.js.map